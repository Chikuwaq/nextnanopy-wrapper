[both]
- use nextnano corporate colormap in 2D plot methods
- format warnings console output
- within TypeError, print the object type to facilitate debug

[nnShortcuts]
- resolve TODOs in each file
- add usage example of shortcuts
- Following David Stark's code, 
  1. support interpolated colormaps (using contourf in python) + adding a line which indicates the waveguide losses
  2. plot oscillator strengths for colored transitions
- 10^19 instead of 1e+1 in ylabel of the charge density 
- use labelsize and ticsize also for plot_inplaneK()
- avoid output PDF filename conflict between plot_carrier_density() and plot_probabilities() 

[object-oriented approach]
- some methods need to branch out to nnp and NEGF after some initial preparation. Put common preparation in the parent class 'CommonShortcuts', and then override the method in child classes. Within the child classes, you can use super().prepare() to invoke parent class'es method.
- move labelsize and ticksize to the parent class constructor. In inherited class methods, use self.labelsize
- if methods with the same name exist in different child classes, define them in the parent class and raise Exception. User instantiated a wrong object.
- benefit of using classes is that the methods don't need to be defined above the code line of invocation. Bring the major methods up, auxilirary methods to the bottom.
E.g. get_states_to_be_plotted()
- is it possible to move imports to __init__? or at least to the parent class
- use it in nnHelpers

[SweepHelper]
- add an example to demonstrate usage
- get generate_gif working
- add plot_probabilities